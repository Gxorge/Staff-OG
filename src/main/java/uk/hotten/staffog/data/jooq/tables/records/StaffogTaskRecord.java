/*
 * This file is generated by jOOQ.
 */
package uk.hotten.staffog.data.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import uk.hotten.staffog.data.jooq.tables.StaffogTask;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StaffogTaskRecord extends UpdatableRecordImpl<StaffogTaskRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>staffog.staffog_task.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>staffog.staffog_task.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>staffog.staffog_task.task</code>.
     */
    public void setTask(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>staffog.staffog_task.task</code>.
     */
    public String getTask() {
        return (String) get(1);
    }

    /**
     * Setter for <code>staffog.staffog_task.data</code>.
     */
    public void setData(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>staffog.staffog_task.data</code>.
     */
    public String getData() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return StaffogTask.STAFFOG_TASK.ID;
    }

    @Override
    public Field<String> field2() {
        return StaffogTask.STAFFOG_TASK.TASK;
    }

    @Override
    public Field<String> field3() {
        return StaffogTask.STAFFOG_TASK.DATA;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTask();
    }

    @Override
    public String component3() {
        return getData();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTask();
    }

    @Override
    public String value3() {
        return getData();
    }

    @Override
    public StaffogTaskRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StaffogTaskRecord value2(String value) {
        setTask(value);
        return this;
    }

    @Override
    public StaffogTaskRecord value3(String value) {
        setData(value);
        return this;
    }

    @Override
    public StaffogTaskRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StaffogTaskRecord
     */
    public StaffogTaskRecord() {
        super(StaffogTask.STAFFOG_TASK);
    }

    /**
     * Create a detached, initialised StaffogTaskRecord
     */
    public StaffogTaskRecord(Integer id, String task, String data) {
        super(StaffogTask.STAFFOG_TASK);

        setId(id);
        setTask(task);
        setData(data);
        resetChangedOnNotNull();
    }
}
